"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCrossValidationSets = exports.getDistinctClasses = exports.getClassesAsNumber = exports.getClasses = exports.getNumbers = exports.getDataset = void 0;
const cvSetsK5_json_1 = __importDefault(require("./data/cvSetsK5.json"));
const cvSetsK7_json_1 = __importDefault(require("./data/cvSetsK7.json"));
const iris_json_1 = __importDefault(require("./data/iris.json"));
const getNumericalClasses_1 = __importDefault(require("./utilities/getNumericalClasses"));
const dataset = iris_json_1.default;
function getDataset() {
    return dataset.slice();
}
exports.getDataset = getDataset;
function getNumbers() {
    return dataset.map((sample) => sample.slice(0, 4));
}
exports.getNumbers = getNumbers;
function getClasses() {
    return dataset.map((sample) => sample[4]);
}
exports.getClasses = getClasses;
function getClassesAsNumber() {
    const classes = dataset.map((sample) => sample[4]);
    return (0, getNumericalClasses_1.default)(classes);
}
exports.getClassesAsNumber = getClassesAsNumber;
function getDistinctClasses() {
    return ['setosa', 'versicolor', 'virginica'];
}
exports.getDistinctClasses = getDistinctClasses;
function getCrossValidationSets(k, options = {}) {
    const { idx = 0, by = 'folds' } = options;
    if (k !== 7 && k !== 5) {
        throw new Error(`k must be 7 or 5`);
    }
    const res = k === 7 ? cvSetsK7_json_1.default[idx] : k === 5 ? cvSetsK5_json_1.default[idx] : [];
    if (by === 'folds') {
        return res;
    }
    else if (by === 'trainTest') {
        const folds = [];
        for (const trainIndex of res) {
            const testIndex = [];
            for (let j = 0; j < 150; j++) {
                if (!trainIndex.includes(j)) {
                    testIndex.push(j);
                }
            }
            folds.push({ testIndex, trainIndex });
        }
        return folds;
    }
    else {
        throw new Error(`unknown "by" option: ${by}`);
    }
}
exports.getCrossValidationSets = getCrossValidationSets;
//# sourceMappingURL=index.js.map